{"version":3,"sources":["logo.svg","components/CountryStats.js","components/tutorial.component.js","UtilComponents/HelperComponent.js","components/WorldStatsCharts.js","components/worldStats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CountryStats","props","state","currentPageSize","countrydetails","filteredData","searchInput","flag","MakeHttpReq","a","fetch","then","res","json","data","arr","Object","keys","countryitems","forEach","k","v","undefined","push","setState","catch","console","log","handleChange","event","target","value","globalSearch","filter","title","toLowerCase","includes","val","Countrydata","bind","this","table","type","name","onChange","label","length","columns","Header","accessor","defaultPageSize","pagination","className","onClick","Component","Tutorial","class","HelperComponent","details","info","results","Contacts","total_cases","total_affected_countries","total_recovered","total_unresolved","total_deaths","total_active_cases","total_new_cases_today","total_new_deaths_today","WorldStatsCharts","options","chart","text","series","Date","UTC","highcharts","Highcharts","worldStats","display","prevState","React","App","href","to","exact","path","component","WorldStats","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ea8ed857.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\n\r\nexport default class CountryStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.val = \"newval\";\r\n        this.Countrydata = this.Countrydata.bind(this);\r\n    }\r\n\r\n    state = {\r\n        currentPageSize: 10,\r\n        countrydetails: [],\r\n        filteredData: [],\r\n        searchInput: '',\r\n        flag: false\r\n    }\r\n\r\n    Countrydata() {\r\n        this.MakeHttpReq();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.MakeHttpReq();\r\n    }\r\n    MakeHttpReq = async () =>  {\r\n        fetch(`https://api.thevirustracker.com/free-api?countryTotals=ALL`)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                var arr = [];\r\n                Object.keys(data.countryitems[0]).forEach(function (k, v) {\r\n                    if (data.countryitems[0][v] !== undefined) {\r\n                        arr.push(data.countryitems[0][v]);\r\n                    }\r\n                });\r\n                this.setState({ countrydetails: arr })\r\n                this.setState({ flag: true })\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ searchInput: event.target.value }, () => {\r\n            this.globalSearch();\r\n        });\r\n    };\r\n\r\n    globalSearch = () => {\r\n        let { searchInput, countrydetails } = this.state;\r\n        let filteredData = countrydetails.filter(value => {\r\n            return (\r\n                value.title.toLowerCase().includes(searchInput.toLowerCase())\r\n            );\r\n        });\r\n        this.setState({ filteredData });\r\n    };\r\n\r\n    render() {\r\n        const flag = this.state.flag;\r\n        const columns = [\r\n            {\r\n                Header: 'Country',\r\n                accessor: 'title'\r\n            }, {\r\n                Header: 'Total Cases',\r\n                accessor: 'total_cases'\r\n            }, {\r\n                Header: 'Total Recovered',\r\n                accessor: 'total_recovered'\r\n            }, {\r\n                Header: 'Total Deaths',\r\n                accessor: 'total_deaths'\r\n            }, {\r\n                Header: 'New Cases',\r\n                accessor: 'total_new_cases_today'\r\n            }, {\r\n                Header: 'New Deaths',\r\n                accessor: 'total_new_deaths_today'\r\n            }, {\r\n                Header: 'Total Active Cases',\r\n                accessor: 'total_active_cases'\r\n            }, {\r\n                Header: 'Total Serious Cases',\r\n                accessor: 'total_serious_cases'\r\n            }\r\n        ]\r\n        let table = null;\r\n        if (flag) {\r\n            table = <div >\r\n                <input type='text' name=\"searchInput\"\r\n                    value={this.state.searchInput || \"\"}\r\n                    onChange={this.handleChange}\r\n                    label=\"Search\" />\r\n                {this.state.flag ? <ReactTable\r\n                    data={this.state.filteredData && this.state.filteredData.length ? this.state.filteredData : this.state.countrydetails}\r\n                    columns={columns}\r\n                    defaultPageSize={this.state.currentPageSize}\r\n                    pagination={true}\r\n                /> : null}\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"text-left\">\r\n                Click here==><button onClick={this.Countrydata} >Stats</button>\r\n                {table}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class Tutorial extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <p class=\"lead text-left\">tutorial Component</p>\r\n        );\r\n      }\r\n\r\n}","import React, { Component } from \"react\";\r\n\r\n\r\nexport default class HelperComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.info = this.info.bind(this);\r\n  }\r\n  state = {\r\n    details: Object,\r\n    flag: false\r\n  }\r\n  componentDidMount() {\r\n    this.info();\r\n  }\r\n\r\n  info = async () => {\r\n    fetch('https://api.thevirustracker.com/free-api?global=stats')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ details: data.results[0], flag: true })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Click below For Corona Virus World Stats</h4>\r\n        <button onClick={this.info} >Stats</button>\r\n        {this.state.flag ? <Contacts details={this.state.details} /> : null}\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\nexport const Contacts = ({ details }) => {\r\n  return (\r\n    <div>\r\n      <center><h1>Corona Virus Updated List</h1></center>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">Total Cases: {details.total_cases}</h2>\r\n          <h5 className=\"card-title\">Total Affected Countries</h5><p>{details.total_affected_countries}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">Recovery Cases:</h6><p>{details.total_recovered}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">UnRecovered Cases:</h6><p>{details.total_unresolved}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">Total Deaths:</h6><p className=\"card-text\">{details.total_deaths}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">Total Active Cases:</h6><p className=\"card-text\">{details.total_active_cases}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">Total New Cases Today:</h6><p className=\"card-text\">{details.total_new_cases_today}</p>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">Total New Deaths Today:</h6><p className=\"card-text\">{details.total_new_deaths_today}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React, { Component } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nexport default class WorldStatsCharts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        const options = {\r\n            chart: {\r\n                type: 'spline'\r\n            },\r\n            title: {\r\n                text: 'My chart'\r\n            },\r\n           /*  plotOptions: {\r\n                series: {\r\n                    pointStart: [Date.UTC(2013,5,2),0.7695]\r\n                }\r\n            }, */\r\n            series: [\r\n                {   name: 'Data',\r\n                    data: [[Date.UTC(2013,5,2),0.7695], \r\n                    [Date.UTC(2013,6,12),2.7695], \r\n                    [Date.UTC(2013,7,21),1.7695], \r\n                    [Date.UTC(2013,8,18),4]]\r\n                    \r\n                }\r\n            ]\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport HelperComponent from \"../UtilComponents/HelperComponent\"\r\nimport WorldStatsCharts from \"./WorldStatsCharts\"\r\nexport default class worldStats extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    }\r\n    this.display = this.display.bind(this);\r\n    this.value = 90;\r\n  }\r\n\r\n  display() {\r\n    console.log(this.value);\r\n    console.log(\"button clicked!\");\r\n    this.setState(prevState => ({ flag: !prevState.flag }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"text-left\">World Stats Component\r\n        <button onClick={this.display} >click</button>\r\n          {this.state.flag ? <p>{this.value}</p> : null}\r\n        </div>\r\n        <div  className=\"text-left\"><HelperComponent/></div>\r\n        <div><WorldStatsCharts/></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.display}>Click me</button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from './logo.svg';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nimport CountryStats from \"./components/CountryStats\";\r\nimport Tutorial from \"./components/tutorial.component\";\r\nimport WorldStats from \"./components/worldStats\";\r\n\r\nfunction App()  {\r\n\r\n  \r\n  return(\r\n    <div className=\"App\">\r\n      <p>hello</p>\r\n      <Router>\r\n      <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <a href=\"/worldStats\" className=\"navbar-brand\">\r\n              Home\r\n            </a>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/worldStats\"} className=\"nav-link\">\r\n                  World Stats\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/countryStats\"} className=\"nav-link\">\r\n                  Country Wise Stats\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/worldStats\"]} component={WorldStats} />\r\n              <Route exact path=\"/countryStats\" component={CountryStats} />\r\n              <Route path=\"/tutorials/:id\" component={Tutorial} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n      <div>\r\n      </div>\r\n      </div>\r\n      \r\n  );\r\n /*  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  ); */\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}